---
import PodcastLayout from '../../layouts/PodcastLayout.astro';
import Headline from '../../components/Headline.astro';
import Paragraph from '../../components/Paragraph.astro';
import Prose from '../../components/Prose.astro';
import type { PodcastData } from '../../types/podcast';
import { formatDate } from '../../utils/helpers';

// Import all podcast data files
import enPodcasts from '../../data/podcasts/en.json';
import dePodcasts from '../../data/podcasts/de.json';
import esPodcasts from '../../data/podcasts/es.json';
import frPodcasts from '../../data/podcasts/fr.json';
import itPodcasts from '../../data/podcasts/it.json';
import ptPodcasts from '../../data/podcasts/pt.json';

export async function getStaticPaths() {
  const languages = ['en', 'de', 'es', 'fr', 'it', 'pt'];
  const podcastData = {
    en: enPodcasts.podcasts,
    de: dePodcasts.podcasts,
    es: esPodcasts.podcasts,
    fr: frPodcasts.podcasts,
    it: itPodcasts.podcasts,
    pt: ptPodcasts.podcasts,
  };
  
  return languages.flatMap(lang => {
    // Get only available episodes for each specific language
    const availableEpisodes = podcastData[lang].filter(p => p.isAvailable);
    return availableEpisodes.map(episode => ({
      params: { lang, id: episode.id }
    }));
  });
}

const { lang, id } = Astro.params;

// Get podcasts for the current language
function getPodcastsForLanguage(language: string): PodcastData[] {
  const podcastMap = {
    en: enPodcasts.podcasts,
    de: dePodcasts.podcasts,
    es: esPodcasts.podcasts,
    fr: frPodcasts.podcasts,
    it: itPodcasts.podcasts,
    pt: ptPodcasts.podcasts,
  } as const;
  
  return (podcastMap[language as keyof typeof podcastMap] || enPodcasts.podcasts) as PodcastData[];
}

const podcasts = getPodcastsForLanguage(lang as string);
const podcast = podcasts.find(p => p.id === id);

// If podcast not found, try English fallback
const fallbackPodcast = lang !== 'en' ? 
  enPodcasts.podcasts.find(p => p.id === id) : null;

const currentPodcast = podcast || fallbackPodcast;

if (!currentPodcast) {
  return Astro.redirect('/404');
}

// Get navigation (previous/next episodes)
function getNavigation() {
  const allPodcasts = getPodcastsForLanguage(lang as string);
  const currentIndex = allPodcasts.findIndex(p => p.id === id);
  
  return {
    prev: currentIndex > 0 ? allPodcasts[currentIndex - 1] : null,
    next: currentIndex < allPodcasts.length - 1 ? allPodcasts[currentIndex + 1] : null
  };
}

const { prev, next } = getNavigation();

// Calculate episode number
const episodeNumber = podcasts.findIndex(p => p.id === id) + 1;

// Basic translations
const translations = {
  en: {
    backToAll: '‚Üê Back to all podcasts',
    listenToEpisode: 'üéß Listen to Episode',
    episode: 'Episode',
    showNotes: 'Show Notes & Transcript',
    previousEpisode: 'Previous Episode',
    nextEpisode: 'Next Episode',
    episodeNavigation: 'Episode navigation',
    publishedOn: 'Published on',
    duration: 'Duration',
    category: 'Category',
    musicHistory: 'Music History',
    exploreMore: 'Explore more episodes in our music journey',
  },
  de: {
    backToAll: '‚Üê Zur√ºck zu allen Podcasts',
    listenToEpisode: 'üéß Episode anh√∂ren',
    episode: 'Episode',
    showNotes: 'Notizen zur Sendung & Transkript',
    previousEpisode: 'Vorherige Episode',
    nextEpisode: 'N√§chste Episode',
    episodeNavigation: 'Episode Navigation',
    publishedOn: 'Ver√∂ffentlicht am',
    duration: 'Dauer',
    category: 'Kategorie',
    musicHistory: 'Musikgeschichte',
    exploreMore: 'Entdecke weitere Episoden unserer Musikreise',
  },
  es: {
    backToAll: '‚Üê Volver a todos los podcasts',
    listenToEpisode: 'üéß Escuchar episodio',
    episode: 'Episodio',
    showNotes: 'Notas del programa y transcripci√≥n',
    previousEpisode: 'Episodio anterior',
    nextEpisode: 'Pr√≥ximo episodio',
    episodeNavigation: 'Navegaci√≥n de episodios',
    publishedOn: 'Publicado el',
    duration: 'Duraci√≥n',
    category: 'Categor√≠a',
    musicHistory: 'Historia Musical',
    exploreMore: 'Explora m√°s episodios en nuestro viaje musical',
  },
  fr: {
    backToAll: '‚Üê Retour √† tous les podcasts',
    listenToEpisode: 'üéß √âcouter l\'√©pisode',
    episode: '√âpisode',
    showNotes: 'Notes de l\'√©mission et transcription',
    previousEpisode: '√âpisode pr√©c√©dent',
    nextEpisode: '√âpisode suivant',
    episodeNavigation: 'Navigation des √©pisodes',
    publishedOn: 'Publi√© le',
    duration: 'Dur√©e',
    category: 'Cat√©gorie',
    musicHistory: 'Histoire Musicale',
    exploreMore: 'Explorez plus d\'√©pisodes dans notre voyage musical',
  },
  it: {
    backToAll: '‚Üê Torna a tutti i podcast',
    listenToEpisode: 'üéß Ascolta episodio',
    episode: 'Episodio',
    showNotes: 'Note del programma e trascrizione',
    previousEpisode: 'Episodio precedente',
    nextEpisode: 'Prossimo episodio',
    episodeNavigation: 'Navigazione episodi',
    publishedOn: 'Pubblicato il',
    duration: 'Durata',
    category: 'Categoria',
    musicHistory: 'Storia Musicale',
    exploreMore: 'Esplora altri episodi nel nostro viaggio musicale',
  },
  pt: {
    backToAll: '‚Üê Voltar a todos os podcasts',
    listenToEpisode: 'üéß Ouvir epis√≥dio',
    episode: 'Epis√≥dio',
    showNotes: 'Notas do programa e transcri√ß√£o',
    previousEpisode: 'Epis√≥dio anterior',
    nextEpisode: 'Pr√≥ximo epis√≥dio',
    episodeNavigation: 'Navega√ß√£o de epis√≥dios',
    publishedOn: 'Publicado em',
    duration: 'Dura√ß√£o',
    category: 'Categoria',
    musicHistory: 'Hist√≥ria Musical',
    exploreMore: 'Explore mais epis√≥dios em nossa jornada musical',
  },
};

const t = translations[lang as keyof typeof translations] || translations.en;
---

<PodcastLayout 
  title={currentPodcast.title} 
  description={`${currentPodcast.description} - ${t.episode} ${episodeNumber} of MelodyMind Podcasts exploring ${currentPodcast.title} in music history.`}
  lang={lang as string}
  type="article"
  publishedTime={currentPodcast.publishedAt}
  modifiedTime={currentPodcast.publishedAt}
  image={`/images/${currentPodcast.imageUrl}.jpg`}
  keywords={[currentPodcast.title.toLowerCase(), t.musicHistory.toLowerCase(), 'music podcast', 'audio story', 'music history']}
  canonical={`https://podcasts.melody-mind.de/${lang}/${currentPodcast.id}`}
>
  <!-- Back navigation -->
  <nav class="mb-8" aria-label="Breadcrumb navigation">
    <a
      href={`/${lang}/`}
      class="inline-flex items-center gap-2 rounded-lg px-4 py-3 text-sm font-semibold text-purple-400 transition-all duration-300 hover:-translate-x-1 hover:bg-purple-500/10 hover:text-purple-300 focus:bg-purple-500/10 focus:text-purple-300 border border-purple-500/20 hover:border-purple-400/40 focus:border-purple-400/40 focus:outline-none focus:ring-2 focus:ring-purple-400 focus:ring-offset-2 focus:ring-offset-slate-900"
      aria-label="Go back to all podcasts"
    >
      {t.backToAll}
    </a>
  </nav>

  <!-- Episode header -->
  <section class="mb-12" aria-labelledby="episode-title">
    <div class="mb-8 flex flex-col gap-10 text-center md:text-left lg:flex-row">
      <!-- Episode image -->
      <div class="relative w-full flex-shrink-0 lg:w-96">
        <div class="group relative aspect-[3/2] w-full overflow-hidden">
          <img
            src={`/images/${currentPodcast.imageUrl}.jpg`}
            alt={`Cover artwork for ${currentPodcast.title} podcast episode`}
            loading="eager"
            class="absolute inset-0 h-full w-full overflow-hidden rounded-2xl object-cover transition-transform duration-300 group-hover:scale-105"
            decoding="async"
          />
        </div>
      </div>

      <!-- Episode info -->
      <div class="flex-1">
        <!-- Episode metadata -->
        <div class="mb-6 flex flex-wrap items-center justify-start gap-3 text-sm">
          <span class="inline-flex items-center justify-center rounded-full bg-gradient-to-r from-purple-600 to-indigo-600 px-4 py-2 text-sm font-bold tracking-wider text-white shadow-lg ring-1 ring-white/10"
                aria-label={`${t.episode} number ${episodeNumber}`}>
            {t.episode} {episodeNumber}
          </span>
          <span class="inline-flex items-center gap-2 rounded-full bg-gray-800 px-3 py-1 text-gray-300">
            <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
              <path d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
            </svg>
            <span aria-label={`${t.category}: ${t.musicHistory}`}>
              {t.category}: {t.musicHistory}
            </span>
          </span>
          <time class="inline-flex items-center gap-2 rounded-full bg-gray-800 px-3 py-1 text-gray-300" 
                datetime={currentPodcast.publishedAt}
                aria-label={`${t.publishedOn} ${formatDate(currentPodcast.publishedAt)}`}>
            <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
              <path d="M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z"/>
            </svg>
            {t.publishedOn} {formatDate(currentPodcast.publishedAt)}
          </time>
        </div>
        
        <Headline level="h1" textSize="2xl" className="mb-4">
          <span id="episode-title">{currentPodcast.title}</span>
        </Headline>
        
        <div class="prose prose-lg prose-invert prose-slate max-w-none mb-6">
          <p>{currentPodcast.description}</p>
        </div>

        <!-- Additional episode info -->
        <div class="bg-gradient-to-r from-purple-900/20 to-indigo-900/20 rounded-xl p-4 border border-purple-500/20" role="note">
          <p class="text-purple-200 text-sm mb-2">
            üéµ {t.exploreMore}
          </p>
        </div>
      </div>
    </div>

    <!-- Audio player -->
    {currentPodcast.audioUrl && (
      <section class="rounded-2xl text-center shadow-xl" aria-labelledby="audio-player-heading">
        <div class="mb-6 rounded-xl border border-gray-600 bg-gray-900 p-6 shadow-inner">
          <Headline level="h2" textSize="lg" className="mb-6 text-center text-white">
            <span id="audio-player-heading">{t.listenToEpisode}</span>
          </Headline>
          
          <div class="mb-4 flex flex-col items-center justify-center gap-4 md:flex-row md:items-center">
            <div class="relative">
              <button
                id="play-button"
                aria-label={`Play ${currentPodcast.title} episode`}
                aria-describedby="audio-status"
                class="flex h-12 w-12 items-center justify-center rounded-full bg-purple-600 shadow-lg transition-transform duration-150 hover:scale-105 focus:scale-105 focus:ring-4 focus:ring-purple-400 focus:outline-none md:h-16 md:w-16"
              >
                <svg width="32" height="32" viewBox="0 0 24 24" fill="white" aria-hidden="true">
                  <path d="M8 5v14l11-7z"/>
                </svg>
              </button>
              
              <button
                id="pause-button"
                aria-label={`Pause ${currentPodcast.title} episode`}
                aria-describedby="audio-status"
                class="hidden h-12 w-12 items-center justify-center rounded-full bg-purple-600 shadow-lg transition-transform duration-150 hover:scale-105 focus:scale-105 focus:ring-4 focus:ring-purple-400 focus:outline-none md:h-16 md:w-16"
              >
                <svg width="32" height="32" viewBox="0 0 24 24" fill="white" aria-hidden="true">
                  <path d="M6 19h4V5H6v14zm8-14v14h4V5h-4z"/>
                </svg>
              </button>
            </div>
            
            <div class="text-center md:text-left">
              <div class="text-lg font-semibold text-white" id="audio-status">{currentPodcast.title}</div>
            </div>
          </div>

          <audio
            id="audio-player"
            preload="metadata"
            class="hidden"
            aria-label={`Audio player for ${currentPodcast.title}`}
          >
            <source src={currentPodcast.audioUrl} type="audio/mpeg" />
            {currentPodcast.subtitleUrl && (
              <track
                kind="captions"
                src={currentPodcast.subtitleUrl}
                srclang={lang}
                label={lang}
                default
              />
            )}
            Your browser does not support the audio element.
          </audio>

          <!-- Progress bar -->
          <div class="mb-4 w-full">
            <label for="progress-bar" class="sr-only">Audio progress</label>
            <div
              id="progress-bar"
              role="slider"
              aria-label="Audio progress"
              aria-valuemin="0"
              aria-valuemax="100"
              aria-valuenow="0"
              tabindex="0"
              class="relative h-3 w-full cursor-pointer rounded-full bg-gray-700 focus:outline-none focus:ring-2 focus:ring-purple-400 focus:ring-offset-2 focus:ring-offset-gray-900"
            >
              <div
                id="progress-fill"
                class="absolute top-0 left-0 h-3 rounded-full bg-gradient-to-r from-purple-500 to-blue-500"
                style="width:0%"
                aria-hidden="true"
              />
            </div>
          </div>

          <!-- Time display -->
          <div class="mb-4 flex flex-col items-center gap-2 text-sm text-gray-400 md:flex-row md:justify-center md:gap-4">
            <span id="time-display" aria-live="polite" aria-label="Current playback time">0:00 / 0:00</span>
          </div>

          <!-- Controls -->
          <div class="flex items-center justify-center gap-6" role="group" aria-label="Audio player controls">
            <button
              class="text-gray-400 transition-colors duration-200 hover:text-white focus:text-white focus:outline-none focus:ring-2 focus:ring-purple-400 focus:ring-offset-2 focus:ring-offset-gray-900 rounded-md p-1"
              id="rewind-button"
              aria-label="Rewind 10 seconds"
            >
              <svg class="h-5 w-5 md:h-6 md:w-6" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                <path d="M12 5V1L7 6l5 5V7c3.31 0 6 2.69 6 6s-2.69 6-6 6-6-2.69-6-6H4c0 4.42 3.58 8 8 8s8-3.58 8-8-3.58-8-8-8z" />
              </svg>
            </button>
            
            <button
              class="text-gray-400 transition-colors duration-200 hover:text-white focus:text-white focus:outline-none focus:ring-2 focus:ring-purple-400 focus:ring-offset-2 focus:ring-offset-gray-900 rounded-md p-1"
              id="forward-button"
              aria-label="Forward 10 seconds"
            >
              <svg class="h-5 w-5 md:h-6 md:w-6" fill="currentColor" viewBox="0 0 24 24" aria-hidden="true">
                <path d="M12 5V1l5 5-5 5V7c-3.31 0-6 2.69-6 6s2.69 6 6 6 6-2.69 6-6h2c0 4.42-3.58 8-8 8s-8-3.58-8-8 3.58-8 8-8z" />
              </svg>
            </button>
          </div>
        </div>
      </section>
    )}
  </section>

  <!-- Show notes -->
  {currentPodcast.showNotesHtml && (
    <section class="mb-12" aria-labelledby="show-notes-heading">
      <Headline level="h2" textSize="xl" className="mb-6">
        <span id="show-notes-heading">{t.showNotes}</span>
      </Headline>
      <article role="region" aria-labelledby="show-notes-heading">
        <Prose html={currentPodcast.showNotesHtml} size="lg" />
      </article>
    </section>
  )}

  <!-- Episode navigation -->
  {(prev || next) && (
    <nav class="mb-12" aria-labelledby="episode-nav-heading">
      <h2 id="episode-nav-heading" class="sr-only">{t.episodeNavigation}</h2>
      <div class="grid grid-cols-1 gap-4 md:grid-cols-2">
        {prev && (
          <a
            href={`/${lang}/${prev.id}`}
            class="flex items-center gap-4 rounded-xl border border-gray-700 bg-gray-800 p-6 text-white shadow-lg transition-all duration-300 hover:-translate-y-1 hover:border-gray-600 hover:bg-gray-700 hover:shadow-xl focus:-translate-y-1 focus:border-gray-600 focus:bg-gray-700 focus:shadow-xl focus:outline-none focus:ring-2 focus:ring-purple-400 focus:ring-offset-2 focus:ring-offset-slate-900"
            aria-label={`Go to previous episode: ${prev.title}`}
          >
            <span class="text-2xl text-purple-400" aria-hidden="true">‚Üê</span>
            <div class="flex-1">
              <span class="mb-1 block text-xs tracking-wide text-gray-400 uppercase">
                {t.previousEpisode}
              </span>
              <span class="block text-base leading-tight font-semibold">{prev.title}</span>
            </div>
          </a>
        )}
        
        {next && (
          <a
            href={`/${lang}/${next.id}`}
            class="flex items-center gap-4 rounded-xl border border-gray-700 bg-gray-800 p-6 text-white shadow-lg transition-all duration-300 hover:-translate-y-1 hover:border-gray-600 hover:bg-gray-700 hover:shadow-xl focus:-translate-y-1 focus:border-gray-600 focus:bg-gray-700 focus:shadow-xl focus:outline-none focus:ring-2 focus:ring-purple-400 focus:ring-offset-2 focus:ring-offset-slate-900 md:col-start-2"
            aria-label={`Go to next episode: ${next.title}`}
          >
            <div class="flex-1 text-right">
              <span class="mb-1 block text-xs tracking-wide text-gray-400 uppercase">
                {t.nextEpisode}
              </span>
              <span class="block text-base leading-tight font-semibold">{next.title}</span>
            </div>
            <span class="text-2xl text-purple-400" aria-hidden="true">‚Üí</span>
          </a>
        )}
      </div>
    </nav>
  )}

  <script>
    import { initSimpleAudioPlayer } from '../../utils/audioPlayer';
    
    document.addEventListener('DOMContentLoaded', () => {
      initSimpleAudioPlayer();
    });
  </script>
</PodcastLayout>